# -*- coding: utf-8 -*-
"""ConditionalStatementsLoops.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bdTaF81XI1tTVmn2pXV6nCM7VRJUOwZk
"""

# 1. Write a  Python program to find those numbers which are divisible by 7 and multiples of 5, between 1500 and 2700 (both included).
result = []

for num in range(1500, 2701):
    if num % 7 == 0 and num % 5 == 0:
        result.append(num)

print(result)

# Commented out IPython magic to ensure Python compatibility.
# 2. Write a  Python program to convert temperatures to and from Celsius and Fahrenheit.
celsius = 60
fahrenheit = (celsius * 1.8) + 32

print('%.2f Celsius is equivalent to: %.2f Fahrenheit'
#       % (celsius, fahrenheit))

# 3. Write a Python program to guess a number between 1 and 9.
#Note : User is prompted to enter a guess. If the user guesses wrong then the prompt appears again until the guess is correct,
# on successful guess, user will get a "Well guessed!" message, and the program will exit.
import random
target, guess = random.randint(1, 9), 0
while target != guess:
  guess = int(input('Guess a number between 1-9\n'))
print('Well guessed :)')

# (4) 5. Write a  Python program that accepts a word from the user and reverses it.
word = input(str("Give random word: "))
reversed = word[::-1]
print(reversed)

# (5) 6. Write a Python program to count the number of even and odd numbers in a series of numbers
list = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
even = 0
odd = 0
for x in list:
    if not x % 2:
      even += 1
    else:
      odd += 1
print("Even numbers:", even)
print("Odd numbers:", odd)

# (6) 8. Write a  Python program that prints all the numbers from 0 to 6 except 3 and 6.
for x in range(6):
    if (x == 3 or x == 6):
      continue
    print(x, end=' ')

# (7) 9. Write a  Python program to get the Fibonacci series between 0 and 50.
a, b = 0, 1
while b <50:
    print(b)
    a,b = b, a + b

# (8) 12. Write a  Python program that accepts a sequence of lines (blank line to terminate) as input and prints the lines as output (all characters in lower case).
print("Enter lines (terminate with a blank line):")

lines = []
while True:
    line = input()
    if line:
        lines.append(line.lower())
    else:
        break

print("\nOutput:")
for line in lines:
    print(line)

# (9) 42. Write a Python program to calculate the sum and average of n integer numbers (input from the user). Input 0 to finish.
total_sum = 0
count = 0

while True:
    num = int(input("Enter an integer number (enter 0 to finish): "))
    if num == 0:
        break
    total_sum += num
    count += 1

if count != 0:
    average = total_sum / count
else:
    average = 0

print("Sum of the numbers:", total_sum)
print("Average of the numbers:", average)

# (10) 43. Write a Python program to create the multiplication table (from 1 to 10) of a number.
number = int(input("Enter a number: "))

print("Multiplication table for", number)
for i in range(1, 11):
    print(number, "x", i, "=", number * i)

# (11) 23. Write a Python program to print the alphabet pattern 'O'.
for i in range(7):
    for j in range(7):
        if i == 0 or i == 6 or j == 0 or j == 6:
            print("*", end="")
        else:
            print(" ", end="")
    print()



# (12) 30. Write a  Python program to print the alphabet pattern 'Z'.
for i in range(7):
    for j in range(7):
        if i == 0 or i == 6:
            print("*", end="")
        elif i + j == 6:
            print("*", end="")
        else:
            print(" ", end="")
    print()

# (13) 28. Write a Python program to print the alphabet pattern 'U'.
for i in range(7):
    for j in range(5):
        if ((j == 0 or j == 4) and i != 6) or (i == 6 and (j != 0 and j != 4)):
            print("*", end="")
        else:
            print(" ", end="")
    print()

# (14) 21. Write a Python program to print the alphabet pattern 'L'.
for i in range(7):
    if i == 6:
        print("*****")
    else:
        print("*")

# (15) 14. Write a Python program that accepts a string and calculates the number of digits and letters.
string = input("Enter a string: ")

num_digits = 0
num_letters = 0

for char in string:
    if char.isdigit():
        num_digits += 1
    elif char.isalpha():
        num_letters += 1

print("Number of digits:", num_digits)
print("Number of letters:", num_letters)

# (16) 15. Write a  Python program to check the validity of passwords input by users.
import re

def is_valid_password(password):
    if len(password) < 6 or len(password) > 16:
        return False

    if not re.search("[a-z]", password):
        return False

    if not re.search("[A-Z]", password):
        return False

    if not re.search("[0-9]", password):
        return False

    if not re.search("[$#@]", password):
        return False

    return True

passwords = ["Passw0rd", "password123", "Strong#Password", "weakpass", "Good1234#"]
for password in passwords:
    if is_valid_password(password):
        print(f"'{password}' is a valid password.")
    else:
        print(f"'{password}' is not a valid password.")

# (17) 16. Write a  Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence.
result = []

for num in range(100, 401):
    digits = [int(digit) for digit in str(num)]
    if all(digit % 2 == 0 for digit in digits):
        result.append(str(num))

print(",".join(result))

# (18) 27. Write a Python program to print the alphabet pattern 'T'.
def print_T(height, width):
    # Top line
    for _ in range(width):
        print('*', end='')
    print()

    # Middle lines
    for _ in range(height - 1):
        for _ in range((width // 2)):
            print(' ', end='')
        print('*', end='')
        print()

height = 7
width = 5
print_T(height, width)

# (19) 31. Write a Python program to calculate a dog's age in dog years.
# Note: For the first two years, a dog year is equal to 10.5 human years. After that, each dog year equals 4 human years.
def calculate_dog_age(human_years):
    if human_years <= 2:
        dog_years = human_years * 10.5
    else:
        dog_years = 2 * 10.5 + (human_years - 2) * 4
    return dog_years

human_age = float(input("Enter the dog's age in human years: "))
dog_age = calculate_dog_age(human_age)
print("The dog's age in dog years is:", dog_age)

# (20) 33. Write a Python program to convert a month name to a number of days.
def month_to_days(month_name):
    days_in_month = {
        "January": 31,
        "February": 28,
        "March": 31,
        "April": 30,
        "May": 31,
        "June": 30,
        "July": 31,
        "August": 31,
        "September": 30,
        "October": 31,
        "November": 30,
        "December": 31
    }
    month_name = month_name.capitalize()

    if month_name in days_in_month:
        return days_in_month[month_name]
    else:
        return "Invalid month name"

month_name = input("Enter the month name: ")
days = month_to_days(month_name)
print(f"The number of days in {month_name} is: {days}")